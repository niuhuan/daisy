// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class ComicChapter {
  final String title;
  final List<ComicChapterInfo> data;

  const ComicChapter({
    required this.title,
    required this.data,
  });

  @override
  int get hashCode => title.hashCode ^ data.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ComicChapter &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          data == other.data;
}

class ComicChapterDetail {
  final PlatformInt64 chapterId;
  final PlatformInt64 comicId;
  final String title;
  final int chapterOrder;
  final int direction;
  final List<String> pageUrl;
  final int picnum;
  final List<String> pageUrlHd;
  final int commentCount;

  const ComicChapterDetail({
    required this.chapterId,
    required this.comicId,
    required this.title,
    required this.chapterOrder,
    required this.direction,
    required this.pageUrl,
    required this.picnum,
    required this.pageUrlHd,
    required this.commentCount,
  });

  @override
  int get hashCode =>
      chapterId.hashCode ^
      comicId.hashCode ^
      title.hashCode ^
      chapterOrder.hashCode ^
      direction.hashCode ^
      pageUrl.hashCode ^
      picnum.hashCode ^
      pageUrlHd.hashCode ^
      commentCount.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ComicChapterDetail &&
          runtimeType == other.runtimeType &&
          chapterId == other.chapterId &&
          comicId == other.comicId &&
          title == other.title &&
          chapterOrder == other.chapterOrder &&
          direction == other.direction &&
          pageUrl == other.pageUrl &&
          picnum == other.picnum &&
          pageUrlHd == other.pageUrlHd &&
          commentCount == other.commentCount;
}

class ComicChapterInfo {
  final int chapterId;
  final String chapterTitle;
  final PlatformInt64 updateTime;
  final int fileSize;
  final int chapterOrder;

  const ComicChapterInfo({
    required this.chapterId,
    required this.chapterTitle,
    required this.updateTime,
    required this.fileSize,
    required this.chapterOrder,
  });

  @override
  int get hashCode =>
      chapterId.hashCode ^
      chapterTitle.hashCode ^
      updateTime.hashCode ^
      fileSize.hashCode ^
      chapterOrder.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ComicChapterInfo &&
          runtimeType == other.runtimeType &&
          chapterId == other.chapterId &&
          chapterTitle == other.chapterTitle &&
          updateTime == other.updateTime &&
          fileSize == other.fileSize &&
          chapterOrder == other.chapterOrder;
}

class ComicDetail {
  final int id;
  final String title;
  final int direction;
  final int isLong;
  final int isAnimeHome;
  final String cover;
  final String description;
  final PlatformInt64 lastUpdateTime;
  final String lastUpdateChapterName;
  final int copyright;
  final String firstLetter;
  final String comicPy;
  final int hidden;
  final int hotNum;
  final int hitNum;
  final int uid;
  final int isLock;
  final int lastUpdateChapterId;
  final List<Item> types;
  final List<Item> status;
  final List<Item> authors;
  final int subscribeNum;
  final List<ComicChapter> chapters;
  final int isNeedLogin;

  ///object UrlLinks=25;
  ///
  ///object DhUrlLinks=27;
  final int isHideChapter;

  const ComicDetail({
    required this.id,
    required this.title,
    required this.direction,
    required this.isLong,
    required this.isAnimeHome,
    required this.cover,
    required this.description,
    required this.lastUpdateTime,
    required this.lastUpdateChapterName,
    required this.copyright,
    required this.firstLetter,
    required this.comicPy,
    required this.hidden,
    required this.hotNum,
    required this.hitNum,
    required this.uid,
    required this.isLock,
    required this.lastUpdateChapterId,
    required this.types,
    required this.status,
    required this.authors,
    required this.subscribeNum,
    required this.chapters,
    required this.isNeedLogin,
    required this.isHideChapter,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      direction.hashCode ^
      isLong.hashCode ^
      isAnimeHome.hashCode ^
      cover.hashCode ^
      description.hashCode ^
      lastUpdateTime.hashCode ^
      lastUpdateChapterName.hashCode ^
      copyright.hashCode ^
      firstLetter.hashCode ^
      comicPy.hashCode ^
      hidden.hashCode ^
      hotNum.hashCode ^
      hitNum.hashCode ^
      uid.hashCode ^
      isLock.hashCode ^
      lastUpdateChapterId.hashCode ^
      types.hashCode ^
      status.hashCode ^
      authors.hashCode ^
      subscribeNum.hashCode ^
      chapters.hashCode ^
      isNeedLogin.hashCode ^
      isHideChapter.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ComicDetail &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          direction == other.direction &&
          isLong == other.isLong &&
          isAnimeHome == other.isAnimeHome &&
          cover == other.cover &&
          description == other.description &&
          lastUpdateTime == other.lastUpdateTime &&
          lastUpdateChapterName == other.lastUpdateChapterName &&
          copyright == other.copyright &&
          firstLetter == other.firstLetter &&
          comicPy == other.comicPy &&
          hidden == other.hidden &&
          hotNum == other.hotNum &&
          hitNum == other.hitNum &&
          uid == other.uid &&
          isLock == other.isLock &&
          lastUpdateChapterId == other.lastUpdateChapterId &&
          types == other.types &&
          status == other.status &&
          authors == other.authors &&
          subscribeNum == other.subscribeNum &&
          chapters == other.chapters &&
          isNeedLogin == other.isNeedLogin &&
          isHideChapter == other.isHideChapter;
}

class ComicRankListItem {
  final int id;
  final String title;
  final String authors;
  final String status;
  final String cover;
  final String types;
  final PlatformInt64 lastUpdateTime;
  final String lastUpdateChapterName;
  final String comicPy;
  final int num;
  final int tagId;
  final String chapterName;
  final int chapterId;

  const ComicRankListItem({
    required this.id,
    required this.title,
    required this.authors,
    required this.status,
    required this.cover,
    required this.types,
    required this.lastUpdateTime,
    required this.lastUpdateChapterName,
    required this.comicPy,
    required this.num,
    required this.tagId,
    required this.chapterName,
    required this.chapterId,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      authors.hashCode ^
      status.hashCode ^
      cover.hashCode ^
      types.hashCode ^
      lastUpdateTime.hashCode ^
      lastUpdateChapterName.hashCode ^
      comicPy.hashCode ^
      num.hashCode ^
      tagId.hashCode ^
      chapterName.hashCode ^
      chapterId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ComicRankListItem &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          authors == other.authors &&
          status == other.status &&
          cover == other.cover &&
          types == other.types &&
          lastUpdateTime == other.lastUpdateTime &&
          lastUpdateChapterName == other.lastUpdateChapterName &&
          comicPy == other.comicPy &&
          num == other.num &&
          tagId == other.tagId &&
          chapterName == other.chapterName &&
          chapterId == other.chapterId;
}

class ComicUpdateListItem {
  final int id;
  final String title;
  final bool isLong;
  final String authors;
  final String types;
  final String cover;
  final String status;
  final String lastUpdateChapterName;
  final int lastUpdateChapterId;
  final PlatformInt64 lastUpdateTime;

  const ComicUpdateListItem({
    required this.id,
    required this.title,
    required this.isLong,
    required this.authors,
    required this.types,
    required this.cover,
    required this.status,
    required this.lastUpdateChapterName,
    required this.lastUpdateChapterId,
    required this.lastUpdateTime,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      isLong.hashCode ^
      authors.hashCode ^
      types.hashCode ^
      cover.hashCode ^
      status.hashCode ^
      lastUpdateChapterName.hashCode ^
      lastUpdateChapterId.hashCode ^
      lastUpdateTime.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ComicUpdateListItem &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          isLong == other.isLong &&
          authors == other.authors &&
          types == other.types &&
          cover == other.cover &&
          status == other.status &&
          lastUpdateChapterName == other.lastUpdateChapterName &&
          lastUpdateChapterId == other.lastUpdateChapterId &&
          lastUpdateTime == other.lastUpdateTime;
}

class Item {
  final int id;
  final String title;

  const Item({
    required this.id,
    required this.title,
  });

  @override
  int get hashCode => id.hashCode ^ title.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Item &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title;
}

class NewsListItem {
  final int id;
  final String title;
  final String fromName;
  final String fromUrl;
  final PlatformInt64 createTime;
  final int isForeign;
  final String foreignUrl;
  final String intro;
  final int authorId;
  final int status;
  final String rowPicUrl;
  final String colPicUrl;
  final int qChatShow;
  final String pageUrl;
  final int commentAmount;
  final int authorUid;
  final String cover;
  final String nickname;
  final int moodAmount;

  const NewsListItem({
    required this.id,
    required this.title,
    required this.fromName,
    required this.fromUrl,
    required this.createTime,
    required this.isForeign,
    required this.foreignUrl,
    required this.intro,
    required this.authorId,
    required this.status,
    required this.rowPicUrl,
    required this.colPicUrl,
    required this.qChatShow,
    required this.pageUrl,
    required this.commentAmount,
    required this.authorUid,
    required this.cover,
    required this.nickname,
    required this.moodAmount,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      fromName.hashCode ^
      fromUrl.hashCode ^
      createTime.hashCode ^
      isForeign.hashCode ^
      foreignUrl.hashCode ^
      intro.hashCode ^
      authorId.hashCode ^
      status.hashCode ^
      rowPicUrl.hashCode ^
      colPicUrl.hashCode ^
      qChatShow.hashCode ^
      pageUrl.hashCode ^
      commentAmount.hashCode ^
      authorUid.hashCode ^
      cover.hashCode ^
      nickname.hashCode ^
      moodAmount.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NewsListItem &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          fromName == other.fromName &&
          fromUrl == other.fromUrl &&
          createTime == other.createTime &&
          isForeign == other.isForeign &&
          foreignUrl == other.foreignUrl &&
          intro == other.intro &&
          authorId == other.authorId &&
          status == other.status &&
          rowPicUrl == other.rowPicUrl &&
          colPicUrl == other.colPicUrl &&
          qChatShow == other.qChatShow &&
          pageUrl == other.pageUrl &&
          commentAmount == other.commentAmount &&
          authorUid == other.authorUid &&
          cover == other.cover &&
          nickname == other.nickname &&
          moodAmount == other.moodAmount;
}

class NovelChapter {
  final int chapterId;
  final String chapterName;
  final int chapterOrder;

  const NovelChapter({
    required this.chapterId,
    required this.chapterName,
    required this.chapterOrder,
  });

  @override
  int get hashCode =>
      chapterId.hashCode ^ chapterName.hashCode ^ chapterOrder.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NovelChapter &&
          runtimeType == other.runtimeType &&
          chapterId == other.chapterId &&
          chapterName == other.chapterName &&
          chapterOrder == other.chapterOrder;
}

class NovelDetail {
  final int id;
  final String name;
  final String zone;
  final String status;
  final String lastUpdateVolumeName;
  final String lastUpdateChapterName;
  final int lastUpdateVolumeId;
  final int lastUpdateChapterId;
  final PlatformInt64 lastUpdateTime;
  final String cover;
  final int hotHits;
  final String introduction;
  final List<String> types;
  final String authors;
  final String firstLetter;
  final int subscribeNum;
  final PlatformInt64 redisUpdateTime;
  final List<NovelVolumeInfo> volumes;

  const NovelDetail({
    required this.id,
    required this.name,
    required this.zone,
    required this.status,
    required this.lastUpdateVolumeName,
    required this.lastUpdateChapterName,
    required this.lastUpdateVolumeId,
    required this.lastUpdateChapterId,
    required this.lastUpdateTime,
    required this.cover,
    required this.hotHits,
    required this.introduction,
    required this.types,
    required this.authors,
    required this.firstLetter,
    required this.subscribeNum,
    required this.redisUpdateTime,
    required this.volumes,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      name.hashCode ^
      zone.hashCode ^
      status.hashCode ^
      lastUpdateVolumeName.hashCode ^
      lastUpdateChapterName.hashCode ^
      lastUpdateVolumeId.hashCode ^
      lastUpdateChapterId.hashCode ^
      lastUpdateTime.hashCode ^
      cover.hashCode ^
      hotHits.hashCode ^
      introduction.hashCode ^
      types.hashCode ^
      authors.hashCode ^
      firstLetter.hashCode ^
      subscribeNum.hashCode ^
      redisUpdateTime.hashCode ^
      volumes.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NovelDetail &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name &&
          zone == other.zone &&
          status == other.status &&
          lastUpdateVolumeName == other.lastUpdateVolumeName &&
          lastUpdateChapterName == other.lastUpdateChapterName &&
          lastUpdateVolumeId == other.lastUpdateVolumeId &&
          lastUpdateChapterId == other.lastUpdateChapterId &&
          lastUpdateTime == other.lastUpdateTime &&
          cover == other.cover &&
          hotHits == other.hotHits &&
          introduction == other.introduction &&
          types == other.types &&
          authors == other.authors &&
          firstLetter == other.firstLetter &&
          subscribeNum == other.subscribeNum &&
          redisUpdateTime == other.redisUpdateTime &&
          volumes == other.volumes;
}

class NovelVolume {
  final int id;
  final String title;
  final int rank;
  final List<NovelChapter> chapters;

  const NovelVolume({
    required this.id,
    required this.title,
    required this.rank,
    required this.chapters,
  });

  @override
  int get hashCode =>
      id.hashCode ^ title.hashCode ^ rank.hashCode ^ chapters.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NovelVolume &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          rank == other.rank &&
          chapters == other.chapters;
}

class NovelVolumeInfo {
  final int id;
  final int novelId;
  final String title;
  final int rank;
  final PlatformInt64 addTime;
  final int chaptersCount;

  const NovelVolumeInfo({
    required this.id,
    required this.novelId,
    required this.title,
    required this.rank,
    required this.addTime,
    required this.chaptersCount,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      novelId.hashCode ^
      title.hashCode ^
      rank.hashCode ^
      addTime.hashCode ^
      chaptersCount.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NovelVolumeInfo &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          novelId == other.novelId &&
          title == other.title &&
          rank == other.rank &&
          addTime == other.addTime &&
          chaptersCount == other.chaptersCount;
}
