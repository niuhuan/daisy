// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'anime_home/entities.dart';
import 'anime_home/proto.dart';
import 'api/bridge.dart';
import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  Map<String, ApiComment> dco_decode_Map_String_api_comment_None(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  ApiComment dco_decode_api_comment(dynamic raw);

  @protected
  ApiCommentResponse dco_decode_api_comment_response(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  ComicDetail dco_decode_box_autoadd_comic_detail(dynamic raw);

  @protected
  ComicViewLog dco_decode_box_autoadd_comic_view_log(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_32(dynamic raw);

  @protected
  LoginData dco_decode_box_autoadd_login_data(dynamic raw);

  @protected
  NovelViewLog dco_decode_box_autoadd_novel_view_log(dynamic raw);

  @protected
  ComicCategory dco_decode_comic_category(dynamic raw);

  @protected
  ComicChapter dco_decode_comic_chapter(dynamic raw);

  @protected
  ComicChapterDetail dco_decode_comic_chapter_detail(dynamic raw);

  @protected
  ComicChapterInfo dco_decode_comic_chapter_info(dynamic raw);

  @protected
  ComicDetail dco_decode_comic_detail(dynamic raw);

  @protected
  ComicFilter dco_decode_comic_filter(dynamic raw);

  @protected
  ComicFilterItem dco_decode_comic_filter_item(dynamic raw);

  @protected
  ComicInFilter dco_decode_comic_in_filter(dynamic raw);

  @protected
  ComicInSearch dco_decode_comic_in_search(dynamic raw);

  @protected
  ComicRankListItem dco_decode_comic_rank_list_item(dynamic raw);

  @protected
  ComicUpdateListItem dco_decode_comic_update_list_item(dynamic raw);

  @protected
  ComicViewLog dco_decode_comic_view_log(dynamic raw);

  @protected
  Comment dco_decode_comment(dynamic raw);

  @protected
  DayList dco_decode_day_list(dynamic raw);

  @protected
  DaySignTask dco_decode_day_sign_task(dynamic raw);

  @protected
  DownloadComic dco_decode_download_comic(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  Item dco_decode_item(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<ComicCategory> dco_decode_list_comic_category(dynamic raw);

  @protected
  List<ComicChapter> dco_decode_list_comic_chapter(dynamic raw);

  @protected
  List<ComicChapterInfo> dco_decode_list_comic_chapter_info(dynamic raw);

  @protected
  List<ComicFilter> dco_decode_list_comic_filter(dynamic raw);

  @protected
  List<ComicFilterItem> dco_decode_list_comic_filter_item(dynamic raw);

  @protected
  List<ComicInFilter> dco_decode_list_comic_in_filter(dynamic raw);

  @protected
  List<ComicInSearch> dco_decode_list_comic_in_search(dynamic raw);

  @protected
  List<ComicRankListItem> dco_decode_list_comic_rank_list_item(dynamic raw);

  @protected
  List<ComicUpdateListItem> dco_decode_list_comic_update_list_item(dynamic raw);

  @protected
  List<ComicViewLog> dco_decode_list_comic_view_log(dynamic raw);

  @protected
  List<Comment> dco_decode_list_comment(dynamic raw);

  @protected
  List<DayList> dco_decode_list_day_list(dynamic raw);

  @protected
  List<DownloadComic> dco_decode_list_download_comic(dynamic raw);

  @protected
  List<Item> dco_decode_list_item(dynamic raw);

  @protected
  List<MasterComment> dco_decode_list_master_comment(dynamic raw);

  @protected
  List<NewsCategory> dco_decode_list_news_category(dynamic raw);

  @protected
  List<NewsListItem> dco_decode_list_news_list_item(dynamic raw);

  @protected
  List<NovelCategory> dco_decode_list_novel_category(dynamic raw);

  @protected
  List<NovelChapter> dco_decode_list_novel_chapter(dynamic raw);

  @protected
  List<NovelInFilter> dco_decode_list_novel_in_filter(dynamic raw);

  @protected
  List<NovelInSearch> dco_decode_list_novel_in_search(dynamic raw);

  @protected
  List<NovelViewLog> dco_decode_list_novel_view_log(dynamic raw);

  @protected
  List<NovelVolume> dco_decode_list_novel_volume(dynamic raw);

  @protected
  List<NovelVolumeInfo> dco_decode_list_novel_volume_info(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_i_32_loose(dynamic raw);

  @protected
  Int32List dco_decode_list_prim_i_32_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, ApiComment)> dco_decode_list_record_string_api_comment(
      dynamic raw);

  @protected
  List<Subscribed> dco_decode_list_subscribed(dynamic raw);

  @protected
  List<Task> dco_decode_list_task(dynamic raw);

  @protected
  List<TaskList> dco_decode_list_task_list(dynamic raw);

  @protected
  LocalImage dco_decode_local_image(dynamic raw);

  @protected
  LoginData dco_decode_login_data(dynamic raw);

  @protected
  LoginInfo dco_decode_login_info(dynamic raw);

  @protected
  MasterComment dco_decode_master_comment(dynamic raw);

  @protected
  NewsCategory dco_decode_news_category(dynamic raw);

  @protected
  NewsListItem dco_decode_news_list_item(dynamic raw);

  @protected
  NovelCategory dco_decode_novel_category(dynamic raw);

  @protected
  NovelChapter dco_decode_novel_chapter(dynamic raw);

  @protected
  NovelDetail dco_decode_novel_detail(dynamic raw);

  @protected
  NovelInFilter dco_decode_novel_in_filter(dynamic raw);

  @protected
  NovelInSearch dco_decode_novel_in_search(dynamic raw);

  @protected
  NovelViewLog dco_decode_novel_view_log(dynamic raw);

  @protected
  NovelVolume dco_decode_novel_volume(dynamic raw);

  @protected
  NovelVolumeInfo dco_decode_novel_volume_info(dynamic raw);

  @protected
  ComicViewLog? dco_decode_opt_box_autoadd_comic_view_log(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_32(dynamic raw);

  @protected
  LoginData? dco_decode_opt_box_autoadd_login_data(dynamic raw);

  @protected
  NovelViewLog? dco_decode_opt_box_autoadd_novel_view_log(dynamic raw);

  @protected
  (String, ApiComment) dco_decode_record_string_api_comment(dynamic raw);

  @protected
  Subscribed dco_decode_subscribed(dynamic raw);

  @protected
  SummationsTask dco_decode_summations_task(dynamic raw);

  @protected
  Task dco_decode_task(dynamic raw);

  @protected
  TaskIndex dco_decode_task_index(dynamic raw);

  @protected
  TaskList dco_decode_task_list(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  Map<String, ApiComment> sse_decode_Map_String_api_comment_None(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  ApiComment sse_decode_api_comment(SseDeserializer deserializer);

  @protected
  ApiCommentResponse sse_decode_api_comment_response(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ComicDetail sse_decode_box_autoadd_comic_detail(SseDeserializer deserializer);

  @protected
  ComicViewLog sse_decode_box_autoadd_comic_view_log(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  LoginData sse_decode_box_autoadd_login_data(SseDeserializer deserializer);

  @protected
  NovelViewLog sse_decode_box_autoadd_novel_view_log(
      SseDeserializer deserializer);

  @protected
  ComicCategory sse_decode_comic_category(SseDeserializer deserializer);

  @protected
  ComicChapter sse_decode_comic_chapter(SseDeserializer deserializer);

  @protected
  ComicChapterDetail sse_decode_comic_chapter_detail(
      SseDeserializer deserializer);

  @protected
  ComicChapterInfo sse_decode_comic_chapter_info(SseDeserializer deserializer);

  @protected
  ComicDetail sse_decode_comic_detail(SseDeserializer deserializer);

  @protected
  ComicFilter sse_decode_comic_filter(SseDeserializer deserializer);

  @protected
  ComicFilterItem sse_decode_comic_filter_item(SseDeserializer deserializer);

  @protected
  ComicInFilter sse_decode_comic_in_filter(SseDeserializer deserializer);

  @protected
  ComicInSearch sse_decode_comic_in_search(SseDeserializer deserializer);

  @protected
  ComicRankListItem sse_decode_comic_rank_list_item(
      SseDeserializer deserializer);

  @protected
  ComicUpdateListItem sse_decode_comic_update_list_item(
      SseDeserializer deserializer);

  @protected
  ComicViewLog sse_decode_comic_view_log(SseDeserializer deserializer);

  @protected
  Comment sse_decode_comment(SseDeserializer deserializer);

  @protected
  DayList sse_decode_day_list(SseDeserializer deserializer);

  @protected
  DaySignTask sse_decode_day_sign_task(SseDeserializer deserializer);

  @protected
  DownloadComic sse_decode_download_comic(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  Item sse_decode_item(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<ComicCategory> sse_decode_list_comic_category(
      SseDeserializer deserializer);

  @protected
  List<ComicChapter> sse_decode_list_comic_chapter(
      SseDeserializer deserializer);

  @protected
  List<ComicChapterInfo> sse_decode_list_comic_chapter_info(
      SseDeserializer deserializer);

  @protected
  List<ComicFilter> sse_decode_list_comic_filter(SseDeserializer deserializer);

  @protected
  List<ComicFilterItem> sse_decode_list_comic_filter_item(
      SseDeserializer deserializer);

  @protected
  List<ComicInFilter> sse_decode_list_comic_in_filter(
      SseDeserializer deserializer);

  @protected
  List<ComicInSearch> sse_decode_list_comic_in_search(
      SseDeserializer deserializer);

  @protected
  List<ComicRankListItem> sse_decode_list_comic_rank_list_item(
      SseDeserializer deserializer);

  @protected
  List<ComicUpdateListItem> sse_decode_list_comic_update_list_item(
      SseDeserializer deserializer);

  @protected
  List<ComicViewLog> sse_decode_list_comic_view_log(
      SseDeserializer deserializer);

  @protected
  List<Comment> sse_decode_list_comment(SseDeserializer deserializer);

  @protected
  List<DayList> sse_decode_list_day_list(SseDeserializer deserializer);

  @protected
  List<DownloadComic> sse_decode_list_download_comic(
      SseDeserializer deserializer);

  @protected
  List<Item> sse_decode_list_item(SseDeserializer deserializer);

  @protected
  List<MasterComment> sse_decode_list_master_comment(
      SseDeserializer deserializer);

  @protected
  List<NewsCategory> sse_decode_list_news_category(
      SseDeserializer deserializer);

  @protected
  List<NewsListItem> sse_decode_list_news_list_item(
      SseDeserializer deserializer);

  @protected
  List<NovelCategory> sse_decode_list_novel_category(
      SseDeserializer deserializer);

  @protected
  List<NovelChapter> sse_decode_list_novel_chapter(
      SseDeserializer deserializer);

  @protected
  List<NovelInFilter> sse_decode_list_novel_in_filter(
      SseDeserializer deserializer);

  @protected
  List<NovelInSearch> sse_decode_list_novel_in_search(
      SseDeserializer deserializer);

  @protected
  List<NovelViewLog> sse_decode_list_novel_view_log(
      SseDeserializer deserializer);

  @protected
  List<NovelVolume> sse_decode_list_novel_volume(SseDeserializer deserializer);

  @protected
  List<NovelVolumeInfo> sse_decode_list_novel_volume_info(
      SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_i_32_loose(SseDeserializer deserializer);

  @protected
  Int32List sse_decode_list_prim_i_32_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, ApiComment)> sse_decode_list_record_string_api_comment(
      SseDeserializer deserializer);

  @protected
  List<Subscribed> sse_decode_list_subscribed(SseDeserializer deserializer);

  @protected
  List<Task> sse_decode_list_task(SseDeserializer deserializer);

  @protected
  List<TaskList> sse_decode_list_task_list(SseDeserializer deserializer);

  @protected
  LocalImage sse_decode_local_image(SseDeserializer deserializer);

  @protected
  LoginData sse_decode_login_data(SseDeserializer deserializer);

  @protected
  LoginInfo sse_decode_login_info(SseDeserializer deserializer);

  @protected
  MasterComment sse_decode_master_comment(SseDeserializer deserializer);

  @protected
  NewsCategory sse_decode_news_category(SseDeserializer deserializer);

  @protected
  NewsListItem sse_decode_news_list_item(SseDeserializer deserializer);

  @protected
  NovelCategory sse_decode_novel_category(SseDeserializer deserializer);

  @protected
  NovelChapter sse_decode_novel_chapter(SseDeserializer deserializer);

  @protected
  NovelDetail sse_decode_novel_detail(SseDeserializer deserializer);

  @protected
  NovelInFilter sse_decode_novel_in_filter(SseDeserializer deserializer);

  @protected
  NovelInSearch sse_decode_novel_in_search(SseDeserializer deserializer);

  @protected
  NovelViewLog sse_decode_novel_view_log(SseDeserializer deserializer);

  @protected
  NovelVolume sse_decode_novel_volume(SseDeserializer deserializer);

  @protected
  NovelVolumeInfo sse_decode_novel_volume_info(SseDeserializer deserializer);

  @protected
  ComicViewLog? sse_decode_opt_box_autoadd_comic_view_log(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  LoginData? sse_decode_opt_box_autoadd_login_data(
      SseDeserializer deserializer);

  @protected
  NovelViewLog? sse_decode_opt_box_autoadd_novel_view_log(
      SseDeserializer deserializer);

  @protected
  (String, ApiComment) sse_decode_record_string_api_comment(
      SseDeserializer deserializer);

  @protected
  Subscribed sse_decode_subscribed(SseDeserializer deserializer);

  @protected
  SummationsTask sse_decode_summations_task(SseDeserializer deserializer);

  @protected
  Task sse_decode_task(SseDeserializer deserializer);

  @protected
  TaskIndex sse_decode_task_index(SseDeserializer deserializer);

  @protected
  TaskList sse_decode_task_list(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_api_comment_None(
      Map<String, ApiComment> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_api_comment(ApiComment self, SseSerializer serializer);

  @protected
  void sse_encode_api_comment_response(
      ApiCommentResponse self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_comic_detail(
      ComicDetail self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_comic_view_log(
      ComicViewLog self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_login_data(
      LoginData self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_novel_view_log(
      NovelViewLog self, SseSerializer serializer);

  @protected
  void sse_encode_comic_category(ComicCategory self, SseSerializer serializer);

  @protected
  void sse_encode_comic_chapter(ComicChapter self, SseSerializer serializer);

  @protected
  void sse_encode_comic_chapter_detail(
      ComicChapterDetail self, SseSerializer serializer);

  @protected
  void sse_encode_comic_chapter_info(
      ComicChapterInfo self, SseSerializer serializer);

  @protected
  void sse_encode_comic_detail(ComicDetail self, SseSerializer serializer);

  @protected
  void sse_encode_comic_filter(ComicFilter self, SseSerializer serializer);

  @protected
  void sse_encode_comic_filter_item(
      ComicFilterItem self, SseSerializer serializer);

  @protected
  void sse_encode_comic_in_filter(ComicInFilter self, SseSerializer serializer);

  @protected
  void sse_encode_comic_in_search(ComicInSearch self, SseSerializer serializer);

  @protected
  void sse_encode_comic_rank_list_item(
      ComicRankListItem self, SseSerializer serializer);

  @protected
  void sse_encode_comic_update_list_item(
      ComicUpdateListItem self, SseSerializer serializer);

  @protected
  void sse_encode_comic_view_log(ComicViewLog self, SseSerializer serializer);

  @protected
  void sse_encode_comment(Comment self, SseSerializer serializer);

  @protected
  void sse_encode_day_list(DayList self, SseSerializer serializer);

  @protected
  void sse_encode_day_sign_task(DaySignTask self, SseSerializer serializer);

  @protected
  void sse_encode_download_comic(DownloadComic self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_item(Item self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_category(
      List<ComicCategory> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_chapter(
      List<ComicChapter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_chapter_info(
      List<ComicChapterInfo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_filter(
      List<ComicFilter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_filter_item(
      List<ComicFilterItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_in_filter(
      List<ComicInFilter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_in_search(
      List<ComicInSearch> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_rank_list_item(
      List<ComicRankListItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_update_list_item(
      List<ComicUpdateListItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comic_view_log(
      List<ComicViewLog> self, SseSerializer serializer);

  @protected
  void sse_encode_list_comment(List<Comment> self, SseSerializer serializer);

  @protected
  void sse_encode_list_day_list(List<DayList> self, SseSerializer serializer);

  @protected
  void sse_encode_list_download_comic(
      List<DownloadComic> self, SseSerializer serializer);

  @protected
  void sse_encode_list_item(List<Item> self, SseSerializer serializer);

  @protected
  void sse_encode_list_master_comment(
      List<MasterComment> self, SseSerializer serializer);

  @protected
  void sse_encode_list_news_category(
      List<NewsCategory> self, SseSerializer serializer);

  @protected
  void sse_encode_list_news_list_item(
      List<NewsListItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_category(
      List<NovelCategory> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_chapter(
      List<NovelChapter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_in_filter(
      List<NovelInFilter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_in_search(
      List<NovelInSearch> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_view_log(
      List<NovelViewLog> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_volume(
      List<NovelVolume> self, SseSerializer serializer);

  @protected
  void sse_encode_list_novel_volume_info(
      List<NovelVolumeInfo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32_strict(
      Int32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_api_comment(
      List<(String, ApiComment)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_subscribed(
      List<Subscribed> self, SseSerializer serializer);

  @protected
  void sse_encode_list_task(List<Task> self, SseSerializer serializer);

  @protected
  void sse_encode_list_task_list(List<TaskList> self, SseSerializer serializer);

  @protected
  void sse_encode_local_image(LocalImage self, SseSerializer serializer);

  @protected
  void sse_encode_login_data(LoginData self, SseSerializer serializer);

  @protected
  void sse_encode_login_info(LoginInfo self, SseSerializer serializer);

  @protected
  void sse_encode_master_comment(MasterComment self, SseSerializer serializer);

  @protected
  void sse_encode_news_category(NewsCategory self, SseSerializer serializer);

  @protected
  void sse_encode_news_list_item(NewsListItem self, SseSerializer serializer);

  @protected
  void sse_encode_novel_category(NovelCategory self, SseSerializer serializer);

  @protected
  void sse_encode_novel_chapter(NovelChapter self, SseSerializer serializer);

  @protected
  void sse_encode_novel_detail(NovelDetail self, SseSerializer serializer);

  @protected
  void sse_encode_novel_in_filter(NovelInFilter self, SseSerializer serializer);

  @protected
  void sse_encode_novel_in_search(NovelInSearch self, SseSerializer serializer);

  @protected
  void sse_encode_novel_view_log(NovelViewLog self, SseSerializer serializer);

  @protected
  void sse_encode_novel_volume(NovelVolume self, SseSerializer serializer);

  @protected
  void sse_encode_novel_volume_info(
      NovelVolumeInfo self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_comic_view_log(
      ComicViewLog? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_login_data(
      LoginData? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_novel_view_log(
      NovelViewLog? self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_api_comment(
      (String, ApiComment) self, SseSerializer serializer);

  @protected
  void sse_encode_subscribed(Subscribed self, SseSerializer serializer);

  @protected
  void sse_encode_summations_task(
      SummationsTask self, SseSerializer serializer);

  @protected
  void sse_encode_task(Task self, SseSerializer serializer);

  @protected
  void sse_encode_task_index(TaskIndex self, SseSerializer serializer);

  @protected
  void sse_encode_task_list(TaskList self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;
}
